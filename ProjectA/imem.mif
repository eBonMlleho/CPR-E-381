DEPTH=1024; 	% Memory depth and width are required 
		% DEPTH is the number of addresses 
WIDTH = 32; 	% WIDTH is the number of bits of data per word
		% DEPTH and WIDTH should be entered as decimal numbers

ADDRESS_RADIX = DEC; 	% Address and value radixes are required
DATA_RADIX = HEX; 	% Enter BIN, DEC, HEX, OCT, or UNS; unless
			% otherwise specified, radixes = HEX

-- Specify values for addresses, which can be single address or range
-- SOME THINGS TO CONSIDER
-- 1) This memory is word-addressable, versus the MIPS conceptual byte-addressable memory.
--    This means that address 1 corresponds to word 1, address 2 corresponds to word 2, etc.
--    Since MIPS will be generating byte addresses, you will have to create some (very simple)
--    logic in your VHDL wrapper to deal with byte/word offsets. 
-- 2) The "single address" notation seems to be least likely to cause confusion so that is what
--    I recommend. 
-- 3) The values need to be in 32-bit hex form (i.e. don't use F when you really mean 0000000F).

CONTENT
BEGIN

0:
8c080000 %1000 1100 0000 1000 0000 0000 0000 0000 	load
20090004 %0010 0000 0000 1001 0000 0000 0000 0100	addi
00008020 %0000 0000 0000 0000 1000 0000 0010 0000	add
08000009 %0000 1000 0000 0000 0000 0000 0000 1001	j
8d2a0000 %1000 1101 0010 1010 0000 0000 0000 0000	lw
01508020 %0000 0001 0101 0000 1000 0000 0010 0000	add
ad300000 %1010 1101 0011 0000 0000 0000 0000 0000	sw
21290004 %0010 0001 0010 1001 0000 0000 0000 0100	addi
2108ffff %0010 0001 0000 1000 1111 1111 1111 1111	addi
11000001 %0001 0001 0000 0000 0000 0000 0000 0001	beq
08000004; %0000 1000 0000 0000 0000 0000 0000 0100  j
END;
